cmake_minimum_required(VERSION 3.5.0) # 최소요구버전
project(UnitTester VERSION 0.1.0) # PROJECT_NAME 과 PROJECT_VERSION

#set(CMAKE_C_STANDARD 99)
#set(CMAKE_CXX_STANDARD 11)

set(This UnitTester) # 빌드 타겟
set(SrcLib SrcLib) # cpp/src 라이브러리

# CTest 지원
enable_testing() 

# cpp/src 라이브러리 빌드
set(SrcFiles 
    cpp/src/Plus.cpp
    cpp/src/Minus.cpp
)
add_library(${SrcLib} STATIC ${SrcFiles})

# googletest 빌드
add_subdirectory(googletest-1.14.0)

# test 폴더 하위 테스트케이스 빌드
set(TestFiles
   test/TestPlus.cpp
   test/TestMinus.cpp
   test/Test_Fixture.cpp
   test/Test_Principle_Liskov_Substitution.cpp 
   test/Test_Principle_Interface_Segregation.cpp
   test/Test_Principle_Dependency_Inversion.cpp
   test/Test_Principle_Encapsulation.cpp
   test/Test_Principle_Explicit_Dependencies.cpp
   test/Test_Principle_TellDontAsk.cpp
   test/Test_Principle_Hollywood.cpp
   test/Test_Principle_Single_Responsibility.cpp
   test/Test_Principle_Open_Closed.cpp
   test/Test_ClassicCpp_Type.cpp
   test/Test_ClassicCpp_Scope.cpp
   test/Test_ClassicCpp_Initialization.cpp
   test/Test_ClassicCpp_ZeroInitialization.cpp
   test/Test_ClassicCpp_Const_Mutable.cpp
   test/Test_ClassicCpp_Pointer_Reference.cpp
   test/Test_ClassicCpp_Struct_Class_Union.cpp
   test/Test_ClassicCpp_Array.cpp
   test/Test_ClassicCpp_Enum.cpp
   test/Test_ClassicCpp_Static.cpp
   test/Test_ClassicCpp_Inline.cpp
   test/Test_ClassicCpp_Namespace.cpp
   test/Test_ClassicCpp_Conversions.cpp
   test/Test_ClassicCpp_Literals.cpp
   test/Test_ClassicCpp_Operators.cpp
   test/Test_ClassicCpp_Function.cpp
   test/Test_ClassicCpp_Preprocessor.cpp
   test/Test_ClassicCpp_Constructor.cpp
   test/Test_ClassicCpp_AssignmentOperator.cpp
   test/Test_ClassicCpp_Destructor.cpp
   test/Test_ClassicCpp_MemberFunction.cpp
   test/Test_ClassicCpp_ImplicitDefinition.cpp 
   test/Test_ClassicCpp_MemberVariable.cpp
   test/Test_ClassicCpp_PImpl.cpp
   test/Test_ClassicCpp_NewDelete.cpp  
   test/Test_ClassicCpp_Inheritance.cpp  
   test/Test_ClassicCpp_Abstract_Interface.cpp  
   test/Test_ClassicCpp_Generic.cpp
   test/Test_ClassicCpp_Template.cpp  
   test/Test_ClassicCpp_TemplateSpecialization.cpp   
   test/Test_ClassicCpp_TemplateParameterArgument.cpp  
   test/Test_ClassicCpp_TemplateArgumentDeduction.cpp  
   test/Test_ClassicCpp_Traits.cpp  
   test/Test_ClassicCpp_Container.cpp  
   test/Test_ClassicCpp_Allocator.cpp  
   test/Test_ClassicCpp_Bitset.cpp 
   test/Test_ClassicCpp_Algorithm.cpp  
   test/Test_ClassicCpp_Functor.cpp    
   test/Test_ClassicCpp_String.cpp  
   test/Test_ClassicCpp_AutoPtr.cpp  
   test/Test_ClassicCpp_MetaProgramming.cpp 
   test/Test_ClassicCpp_ExceptionMechanism.cpp  
   test/Test_ClassicCpp_Diagonostics.cpp     
   test/Test_ClassicCpp_ExceptionWarranty.cpp
   test/Test_MordernCpp_RValueValueCategory.cpp
   test/Test_MordernCpp_AutoDecltype.cpp
   test/Test_MordernCpp_DefaultDeleteOverrideFinal.cpp
   test/Test_MordernCpp_ScopedEnum.cpp
   test/Test_MordernCpp_Constexpr.cpp    
   test/Test_MordernCpp_UniformInitialization.cpp   
   test/Test_MordernCpp_DelegatingInheritedConstructor.cpp
   test/Test_MordernCpp_Nullptr.cpp
   test/Test_MordernCpp_VariadicTemplate.cpp
   test/Test_MordernCpp_UnrestrictedUnion.cpp
   test/Test_MordernCpp_String.cpp
   test/Test_MordernCpp_UserLiteral.cpp
   test/Test_MordernCpp_StaticAssert.cpp
   test/Test_MordernCpp_Attribute.cpp
   test/Test_MordernCpp_RangeFor.cpp
   test/Test_MordernCpp_NoExcept.cpp
   test/Test_MordernCpp_Align.cpp
   test/Test_MordernCpp_MemberInitialization.cpp
   test/Test_MordernCpp_Lambda.cpp 
   test/Test_MordernCpp_VariadicMacro.cpp 
   test/Test_MordernCpp_MemberFunctionRef.cpp 
   test/Test_MordernCpp_InlineNamespace.cpp 
   test/Test_MordernCpp_ExplicitConversions.cpp 
   test/Test_MordernCpp_ExternTemplate1.cpp 
   test/Test_MordernCpp_ExternTemplate2.cpp 
   test/Test_MordernCpp_Sizeof.cpp 
   test/Test_CppPattern_IncludeGuard.cpp
   test/Test_CppPattern_LogicalConst.cpp
   test/Test_CppPattern_Holder.cpp
   test/Test_CppPattern_SmartPointer.cpp
   test/Test_CppPattern_NewHandler.cpp
)

# 실행파일 구성
add_executable(${This} ${TestFiles}) 

# googletest와 SrcLib 포함
target_link_libraries(${This} 
    gtest_main 
    ${SrcLib}
)

# CTest가 googletest의 테스트케이스 정보를 찾을 수 있게 함
include(GoogleTest)
gtest_discover_tests(${This}) 
