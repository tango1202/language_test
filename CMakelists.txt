cmake_minimum_required(VERSION 3.5.0) # 최소요구버전
project(UnitTester VERSION 0.1.0) # PROJECT_NAME 과 PROJECT_VERSION

#set(CMAKE_C_STANDARD 99)
#set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++20 -Wimplicit-fallthrough") # -fopenmp -march=native -D_GLIBCXX_PARALLEL

set(This UnitTester) # 빌드 타겟
set(SrcLib SrcLib) # cpp/src 라이브러리

# CTest 지원
enable_testing() 

# cpp/src 라이브러리 빌드
set(SrcFiles 
    cpp/src/Plus.cpp
    cpp/src/Minus.cpp
)
add_library(${SrcLib} STATIC ${SrcFiles})

# googletest 빌드
add_subdirectory(googletest-release-1.12.1) # C++11 필요
# add_subdirectory(googletest-1.14.0) # C++14~ 필요


# test 폴더 하위 테스트케이스 빌드
set(TestFiles
   test/TestPlus.cpp
   test/TestMinus.cpp
   test/Test_Fixture.cpp
   test/Test_Principle_Liskov_Substitution.cpp 
   test/Test_Principle_Interface_Segregation.cpp
   test/Test_Principle_Dependency_Inversion.cpp
   test/Test_Principle_Encapsulation.cpp
   test/Test_Principle_Explicit_Dependencies.cpp
   test/Test_Principle_TellDontAsk.cpp
   test/Test_Principle_Hollywood.cpp
   test/Test_Principle_Single_Responsibility.cpp
   test/Test_Principle_Open_Closed.cpp
   test/Test_LegacyCpp_Type.cpp
   test/Test_LegacyCpp_Scope.cpp
   test/Test_LegacyCpp_Initialization.cpp
   test/Test_LegacyCpp_ZeroInitialization.cpp
   test/Test_LegacyCpp_Const_Mutable.cpp
   test/Test_LegacyCpp_Pointer_Reference.cpp
   test/Test_LegacyCpp_Struct_Class_Union.cpp
   test/Test_LegacyCpp_Array.cpp
   test/Test_LegacyCpp_Enum.cpp
   test/Test_LegacyCpp_Static.cpp
   test/Test_LegacyCpp_Inline.cpp
   test/Test_LegacyCpp_Namespace.cpp
   test/Test_LegacyCpp_Conversions.cpp
   test/Test_LegacyCpp_Literals.cpp
   test/Test_LegacyCpp_Operators.cpp
   test/Test_LegacyCpp_Function.cpp
   test/Test_LegacyCpp_Include.cpp 
   test/Test_LegacyCpp_Preprocessor.cpp
   test/Test_LegacyCpp_Constructor.cpp
   test/Test_LegacyCpp_AssignmentOperator.cpp
   test/Test_LegacyCpp_Destructor.cpp
   test/Test_LegacyCpp_MemberFunction.cpp
   test/Test_LegacyCpp_ImplicitDefinition.cpp 
   test/Test_LegacyCpp_MemberVariable.cpp
   test/Test_LegacyCpp_PImpl.cpp
   test/Test_LegacyCpp_NewDelete.cpp  
   test/Test_LegacyCpp_NewOverloading.cpp  
   test/Test_LegacyCpp_Inheritance.cpp  
   test/Test_LegacyCpp_Abstract_Interface.cpp  
   test/Test_LegacyCpp_Generic.cpp
   test/Test_LegacyCpp_Template.cpp  
   test/Test_LegacyCpp_TemplateSpecialization.cpp   
   test/Test_LegacyCpp_TemplateParameterArgument.cpp  
   test/Test_LegacyCpp_TemplateArgumentDeduction.cpp  
   test/Test_LegacyCpp_Traits.cpp  
   test/Test_LegacyCpp_Container.cpp  
   test/Test_LegacyCpp_Allocator.cpp  
   test/Test_LegacyCpp_Bitset.cpp 
   test/Test_LegacyCpp_Algorithm.cpp  
   test/Test_LegacyCpp_Functor.cpp    
   test/Test_LegacyCpp_String.cpp  
   test/Test_LegacyCpp_AutoPtr.cpp  
   test/Test_LegacyCpp_MetaProgramming.cpp 
   test/Test_LegacyCpp_ExceptionMechanism.cpp  
   test/Test_LegacyCpp_Diagonostics.cpp     
   test/Test_LegacyCpp_ExceptionWarranty.cpp
   test/Test_LegacyCpp_Pair.cpp 
   test/Test_MordernCpp_Type.cpp
   test/Test_MordernCpp_RValueValueCategory.cpp
   test/Test_MordernCpp_ForwardingReference.cpp
   test/Test_MordernCpp_AutoDecltype.cpp
   test/Test_MordernCpp_Class.cpp
   test/Test_MordernCpp_ScopedEnum.cpp
   test/Test_MordernCpp_Constexpr.cpp    
   test/Test_MordernCpp_Initialization.cpp   
   test/Test_MordernCpp_VariadicTemplate.cpp
   test/Test_MordernCpp_UnrestrictedUnion.cpp
   test/Test_MordernCpp_String.cpp
   test/Test_MordernCpp_Literals.cpp
   test/Test_MordernCpp_StaticAssert.cpp
   test/Test_MordernCpp_Attribute.cpp
   test/Test_MordernCpp_Statement.cpp
   test/Test_MordernCpp_NoExcept.cpp
   test/Test_MordernCpp_Lambda.cpp 
   test/Test_MordernCpp_ETC.cpp 
   test/Test_MordernCpp_MemberFunctionRef.cpp 
   test/Test_MordernCpp_Namespace.cpp 
   test/Test_MordernCpp_ExplicitConversions.cpp 
   test/Test_MordernCpp_ExternTemplate1.cpp 
   test/Test_MordernCpp_ExternTemplate2.cpp 
   test/Test_MordernCpp_UniquePtr.cpp 
   test/Test_MordernCpp_SharedPtr.cpp 
   test/Test_MordernCpp_Tuple.cpp 
   test/Test_MordernCpp_Function.cpp 
   test/Test_MordernCpp_Hash.cpp 
   test/Test_MordernCpp_Array.cpp 
   test/Test_MordernCpp_ForwardList.cpp 
   test/Test_MordernCpp_UnorderedMap.cpp
   test/Test_MordernCpp_Iterator.cpp
   test/Test_MordernCpp_Thread.cpp
   test/Test_MordernCpp_ConditionVariable.cpp
   test/Test_MordernCpp_Chrono.cpp
   test/Test_MordernCpp_Ratio.cpp
   test/Test_MordernCpp_Atomic.cpp
   test/Test_MordernCpp_Future.cpp
   test/Test_MordernCpp_RegularExpressions.cpp
   test/Test_MordernCpp_Template.cpp
   test/Test_MordernCpp_IntegerSequence.cpp
   test/Test_MordernCpp_Exchange.cpp
   test/Test_MordernCpp_CopyElision.cpp
   test/Test_MordernCpp_InlineVariable1.cpp
   test/Test_MordernCpp_InlineVariable2.cpp
   test/Test_MordernCpp_InlineVariable3.cpp
   test/Test_MordernCpp_StructuredBinding.cpp
   test/Test_MordernCpp_Any.cpp
   test/Test_MordernCpp_Optional.cpp
   test/Test_MordernCpp_Variant.cpp
   test/Test_MordernCpp_Functor.cpp
   test/Test_MordernCpp_Memory.cpp
   test/Test_MordernCpp_Algorithm.cpp
   test/Test_MordernCpp_PolymorphicAllocator.cpp
   test/Test_MordernCpp_StringView.cpp
   test/Test_MordernCpp_TypeTraits.cpp
   test/Test_MordernCpp_Operators.cpp
   test/Test_MordernCpp_Concept.cpp
   test/Test_MordernCpp_Container.cpp
   test/Test_MordernCpp_Coroutine.cpp
   test/Test_MordernCpp_Ranges.cpp
   test/Test_MordernCpp_Span.cpp
   test/Test_CppPattern_LogicalConst.cpp
   test/Test_CppPattern_Holder.cpp
   test/Test_CppPattern_SmartPointer.cpp
   test/Test_CppPattern_NewHandler.cpp
)

# 실행파일 구성
add_executable(${This} ${TestFiles}) 

# googletest와 SrcLib 포함
target_link_libraries(${This} 
    gtest_main 
    ${SrcLib}
)

# CTest가 googletest의 테스트케이스 정보를 찾을 수 있게 함
include(GoogleTest)
gtest_discover_tests(${This}) 
